{
    "basePath": "/v1",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "Attribute": {
            "description": "An Attribute describes some feature or characteristic of the visitor.",
            "properties": {
                "entity_id": {
                    "description": "The ID of the entity corresponding to this Attribute. This is only required for custom attributes (type=\"custom\"), and invalid for other Attribute types.",
                    "example": "1234",
                    "type": "string"
                },
                "key": {
                    "description": "The key (or API name) of the this Attribute. This is only required for custom attributes (type=\"custom\"), and optional for other Attribute types.",
                    "example": "shoe_purchased",
                    "type": "string"
                },
                "type": {
                    "description": "Describes what kind of Attribute this is (i.e., \"custom\", \"location\", etc.)",
                    "example": "custom",
                    "type": "string"
                },
                "value": {
                    "description": "The value can be an arbitrary string, integer, number, or a boolean. A boolean, integer or number can also be sent as a string value prefixed by the unicode character U+E000 . For example the integer 123 can be sent as \"\\UE000123\".",
                    "example": "nike zoom air"
                }
            },
            "required": [
                "type",
                "value"
            ],
            "type": "object"
        },
        "Decision": {
            "description": "This object represents a decision that was made to bucket a visitor into a particular experiment and variation.",
            "properties": {
                "campaign_id": {
                    "description": "The id of the campaign containing this experiment.",
                    "example": "4321",
                    "type": "string"
                },
                "experiment_id": {
                    "description": "The id of the experiment the visitor was exposed to. For Personalization Campaigns, clients should explicitly send null as the experiment_id for visitors not bucketed into any Experiment, for the purpose of accurately computing Campaign reach.",
                    "example": "1234",
                    "type": "string"
                },
                "is_campaign_holdback": {
                    "description": "If true, the chosen experience was held back at the campaign level. Required for Personalization, omit otherwise.",
                    "example": false,
                    "type": "boolean"
                },
                "variation_id": {
                    "description": "The id of the variation the visitor was exposed to. For Personalization Campaigns, clients should explicitly send null as the variation_id for visitors not bucketed into any Experiment, for the purpose of accurately computing Campaign reach.",
                    "example": "5678",
                    "type": "string"
                }
            },
            "required": [
                "experiment_id",
                "variation_id",
                "campaign_id"
            ],
            "type": "object"
        },
        "Event": {
            "properties": {
                "entity_id": {
                    "description": "The id of the entity corresponding to this event.",
                    "example": "1234",
                    "type": "string"
                },
                "key": {
                    "description": "The event key (aka API name) for this event.",
                    "example": "my_event_name",
                    "type": "string"
                },
                "quantity": {
                    "description": "An aggregatable \"count\" associated with this event; for example, a number of video views or items in a shopping cart.",
                    "example": 4,
                    "type": "integer"
                },
                "revenue": {
                    "description": "An aggregatable revenue amount associated with this event, in 1/100th of an arbitrary currency unit. For example, to represent $23.42, this field would be set to 2342.",
                    "example": 2342,
                    "format": "int64",
                    "type": "integer"
                },
                "tags": {
                    "$ref": "#/definitions/Tags"
                },
                "timestamp": {
                    "description": "Timestamp at which the event was generated, time since the epoch in milliseconds.",
                    "example": 1485989442742316000,
                    "type": "integer"
                },
                "type": {
                    "description": "the type of event.  For example, to indicate a 'decision_point' type should be 'campaign_activated'.",
                    "example": "campaign_activated",
                    "type": "string"
                },
                "uuid": {
                    "description": "A unique identifier for this Event. This may be generated by the client with a typical UUID-generating method. Used by Optimizely's backend to de-duplicate requests that are accidentally or erroneously replayed.",
                    "example": "0255F96D-922B-433B-B474-5D87EC1AB122",
                    "type": "string"
                },
                "value": {
                    "description": "A scalar value associated with an event. This should be some non-revenue number.",
                    "example": 1.234,
                    "type": "number"
                }
            },
            "required": [
                "timestamp",
                "uuid"
            ],
            "type": "object"
        },
        "EventBatch": {
            "properties": {
                "account_id": {
                    "description": "The Optimizely account to which these events should be attributed",
                    "example": "1234",
                    "type": "string"
                },
                "anonymize_ip": {
                    "default": true,
                    "description": "Optimizely typically stores the client IP address for each request. If this flag is true, the last octet of the IP will be truncated before it is stored. If false, the entire IP address will be stored. This is most relevant for consumers of this API that are implemented in a web browser or mobile client context who are subject to policies or regulation restricting the storage of end-user identifying information. Note that this flag is independent of the IP anonymization setting in the Account and Project settings, which only controls how Optimizely clients set this flag. Also note that if this flag is set, care must be taken when using the IP filtering feature, as fully-qualified explicit IP addresses will not function as filters (anonymization occurs before events are filtered by IP).",
                    "type": "boolean"
                },
                "client_name": {
                    "description": "A unique identifier for the system that generated this event. By convention, this should be something like \"organization_name/system_name\".",
                    "example": "acmecorp/offlineconversiontracker",
                    "type": "string"
                },
                "client_version": {
                    "description": "A version identifier for the system that generated this event.",
                    "example": "1.0.0",
                    "type": "string"
                },
                "enrich_decisions": {
                    "default": false,
                    "description": "If true, additional processing is performed on each event in the EventBatch that simplifies the data requirements to track conversion events. Optimizely records the complete history of decisions that have been sent for each visitor which are represented as events of type campaign_activated. When enrich_decisions is enabled on an EventBatch, each of its events will have the recorded decisions automatically linked based on the event\u2019s visitor_id and timestamp. In turn, the decisions required in an EventBatch are only those associated to a campaign_activated event in the same EventBatch. Additionally, due to the stateful nature of enrich_decisions, a campaign_activated event only needs to be sent once per visitor_id and entity_id, as long as the associated decision has not changed.",
                    "externalDocs": {
                        "description": "Getting Started",
                        "url": "https://developers.optimizely.com/x/events/api/#getting-started"
                    },
                    "type": "boolean"
                },
                "project_id": {
                    "description": "The project_id needs only to be passed if you are using the Recommendations product.",
                    "example": "5678",
                    "type": "string"
                },
                "visitors": {
                    "description": "An array of visitor objects that describe the visitor\\'s experience during an Optimizely campaign.",
                    "items": {
                        "$ref": "#/definitions/Visitor"
                    },
                    "type": "array"
                }
            },
            "required": [
                "account_id",
                "visitors"
            ],
            "type": "object"
        },
        "Snapshot": {
            "properties": {
                "decisions": {
                    "description": "The list of bucketing Decisions made for the visitor (i.e. which experiments and variations the visitor was exposed to) for the duration of the session thus far. If the `enrich_decisions` option is enabled, just the Decisions associated to `campaign_activated` event in same Snapshot are necessary.",
                    "externalDocs": {
                        "description": "enrich_decisions option",
                        "url": "https://developers.optimizely.com/x/events/api/index.html#EventBatch_"
                    },
                    "items": {
                        "$ref": "#/definitions/Decision"
                    },
                    "type": "array"
                },
                "events": {
                    "description": "The list of Events that should be recorded by the Optimizely backend within the given visitor, session and account context.",
                    "items": {
                        "$ref": "#/definitions/Event"
                    },
                    "type": "array"
                }
            },
            "required": [
                "events"
            ],
            "type": "object"
        },
        "Tags": {
            "description": "Arbitrary key value pairs attached to an event. The value can be a string, integer, number, or booean. A non-string type can also be sent as a string value prefixed by the unicode character U+E000. For example the integer 123 can be sent as \"\\UE000123\".",
            "example": {
                "duration": 22,
                "video_title": "Funny Cats"
            },
            "type": "object"
        },
        "Visitor": {
            "properties": {
                "attributes": {
                    "description": "Attributes associated with this visitor at the time of this request",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    },
                    "type": "array"
                },
                "session_id": {
                    "description": "A unique identifier that identifies the session context, if any, for these events. If omitted, the Optimizely backend will calculate session-based results by inferring sessions by opening a session when an event is first received from a given visitor_id, and closing the session after 30 minutes with no events received for that visitor, with a maximum session size of 24 hours.",
                    "example": "session_1231982382",
                    "type": "string"
                },
                "snapshots": {
                    "description": "An array of events triggered for an experiment, and the decision snapshot when that event occurred. Events can occur within different decision snapshots.  Events occurring in different snapshots should be contained in different snapshot items.",
                    "items": {
                        "$ref": "#/definitions/Snapshot"
                    },
                    "type": "array"
                },
                "visitor_id": {
                    "description": "A unique identifier for the visitor",
                    "example": "user_32912378471284",
                    "type": "string"
                },
                "tags": [
                    "Visitor"
                ]
            },
            "required": [
                "visitor_id",
                "snapshots"
            ],
            "type": "object"
        }
    },
    "host": "logx.optimizely.com",
    "info": {
        "description": "The Event API allows developers to send impression or event data to Optimizely from anywhere. Our\nJavaScript API, mobile SDKs and Fullstack SDKs include out-of-the-box tracking for impressions\nand events on your site or application, but you might want to send conversion data that occurs\noffline or with your own client. In cases like these, event calls may be sent directly to\nOptimizely's logging servers via this API.\n```",
        "title": "Optimizely Event API",
        "version": "1.3.0"
    },
    "paths": {
        "/events": {
            "post": {
                "parameters": [
                    {
                        "description": "JSON object that holds an array of visitor objects that describe the visitor\\'s experience during an Optimizely campaign.",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventBatch"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The events were queued for recording by the Optimizely backend."
                    },
                    "400": {
                        "description": "The request is malformed or otherwise failed validation by the Optimizely backend."
                    },
                    "500": {
                        "description": "A server error occurred. The client should attempt to resend the events at a later time."
                    }
                },
                "summary": "Log Endpoint",
                "tags": [
                    "API Reference"
                ]
            }
        }
    },
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "tags": [
        {
            "description": "Log Endpoint Dinosaurs",
            "name": "API Reference"
        },
        {
            "description": "Marry Poppins visited me blimey",
            "name": "Visitor"
        }
    ]
}